import discord
import os
from discord import app_commands
from discord.ext import commands

# Channel IDs from env (make sure they're ints)
SIGNUPS_CH = int(os.getenv("SIGNUPS_CH_ID", 0))
REPORTS_CH = int(os.getenv("REPORTS_CH_ID", 0))
VIDEO_CHANNEL = int(os.getenv("VIDEO_CH_ID", 0))
ANNOUNCEMENT_CH = int(os.getenv("ANNOUNCEMENTS_CH_ID", 0))
RULES_CH = int(os.getenv("RULES_CH_ID", 0))
SCHEDULING_CH = int(os.getenv("SCHEDULING_CH_ID", 0))


class TournamentInfo(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    # === General Tournament Info ===
    @app_commands.command(name="general_tournament_info", description="Shows general tournament information")
    @app_commands.default_permissions(administrator=True)
    async def general_tournament_info(self, interaction: discord.Interaction):
        embed = discord.Embed(
            title="üéÆ How It Works",
            description=(
                "üìù **Sign-Ups**\n"
                f"‚Ä¢ Sign up in <#{SIGNUPS_CH}> with `/sign_up`\n"
                "‚Ä¢ Leave with `/unregister`\n\n"

                "‚è≥ **Rounds**\n"
                "‚Ä¢ All tournaments are **Single Elimination**\n"
                "‚Ä¢ Wait for the round announcement before playing your match\n\n"

                "üìÖ **Scheduling Matches**\n"
                "‚Ä¢ After the round is announced, talk with your opponent and agree on a date and time\n"
                "‚Ä¢ One of you uses `/schedule_match` to set it\n"
                "‚Ä¢ You can play earlier, but never later than the schedule\n"
                "‚Ä¢ Matches must be scheduled before **Wednesday (PBO in-game time)**\n\n"

                "üèÅ **Report Matches**\n"
                f"‚Ä¢ Winners report in <#{REPORTS_CH}> with `/report_win`\n"
                "‚Ä¢ Write the winner‚Äôs @ and add a **video link**\n"
                "‚Ä¢ Example: `/report_win winner:@Username video_link:https://...`\n\n"

                "üé• **Video Proof**\n"
                "- You must record every match\n"
                "- Upload your battle and send a link where it can be watched (YouTube, LimeWire, etc.)\n"
                "- üîí Only **@afc_adinho** will see your videos. Nobody else\n\n"
                "üìñ Recording Guide: [Click Here](https://discord.com/channels/1302588750630621184/1423922709108363285/1423935057382604883)\n"
                "üì§ Upload Guide: [Click Here](https://discord.com/channels/1302588750630621184/1423922709108363285/1423944853762605086)\n\n"

                "‚öñÔ∏è **Fair Play**\n"
                "‚Ä¢ Be respectful\n"
                f"‚Ä¢ Follow the rules in <#{RULES_CH}>"
            ),
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed)

    @app_commands.command(name="tournament_rules", description="Shows the official tournament rules")
    @app_commands.default_permissions(administrator=True)
    async def tournament_rules(self, interaction: discord.Interaction):
        embed = discord.Embed(
            title="üìú Tournament Rules",
            description=(
                "‚öñÔ∏è **General Conduct**\n"
                "‚Ä¢ Be respectful ‚Äî we are all friends here\n"
                "‚Ä¢ No need to get angry if someone gets lucky\n\n"

                "üìÖ **Scheduling**\n"
                "‚Ä¢ Matches must be scheduled before **Wednesday (PBO in-game time)**\n"
                "‚Ä¢ If you do not schedule, staff will set a random time for you\n"
                "‚Ä¢ If your opponent does not respond to scheduling, tell us by Wednesday. "
                "We will try to contact them. If they still do not answer, they are disqualified\n\n"

                "‚è∞ **Match Times**\n"
                "‚Ä¢ If your opponent does not show up at the scheduled time, contact staff\n"
                "‚Ä¢ We allow 15 minutes late. After that, they are disqualified\n"
                "‚Ä¢ If both players do not show up, the winner will be decided by a coin flip\n\n"

                "üîå **Disconnects**\n"
                "‚Ä¢ In PBO, if you disconnect, the game closes and you lose instantly\n"
                "‚Ä¢ Because of this, a disconnect always counts as a loss\n"
                "‚Ä¢ Video proof is required to confirm who disconnected\n\n"

                "üìä **Reporting Results**\n"
                "‚Ä¢ Winners must report the match result in the report channel\n"
                "‚Ä¢ üö® Reporting a false score (claiming a win when you did not win) means instant disqualification\n\n"

                "‚è≥ **Rounds**\n"
                "‚Ä¢ All tournaments are **Single Elimination**\n"
                "‚Ä¢ Wait for the round announcement before playing your match\n\n"

                "‚õî **Pok√©mon Bans**\n"
                "‚Ä¢ We follow the in-game Pok√©mon bans per tier\n"
                "‚Ä¢ To see the list: open the **Ranked Ladder** (icon at the top left, next to the Pok√©dex)\n"
                "‚Ä¢ In the Ranked Ladder window, click the **Bans** button (bottom right of the row)\n"
                "‚Ä¢ Select **OverUsed (OU)** or **UnderUsed (UU)** to see the banned Pok√©mon list\n"
                "‚Ä¢ Pok√©mon in these lists are not allowed in that tier\n\n"

                "üìù **Final Notes**\n"
                "‚Ä¢ These rules cover the main cases, but they are not limited to this list\n"
                "‚Ä¢ Rules may be updated or changed if needed during the tournament\n"
                "‚Ä¢ Staff decisions are final\n\n"

                "üèÜ These rules make sure the tournament is fair and smooth for everyone!"
            ),
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed)


    # === Rewards Info ===

    @app_commands.command(name="tournament_rewards", description="Shows the rewards for the tournament")
    @app_commands.default_permissions(administrator=True)
    async def base_tournament_rewards(self, interaction: discord.Interaction):
        embed = discord.Embed(
            title="üéÅ Rewards",
            description=(
                "ü•á **1st Place**\n"
                "‚Ä¢ üëë Special Discord role: **Champion** (prestige, shown at the top until next tournament)\n"
                "‚Ä¢ üíé 500 Gems\n"
                "‚Ä¢ üí∞ 250,000 Pok√©dollars\n\n"
                "ü•à **2nd Place**\n"
                "‚Ä¢ üíé 250 Gems\n"
                "‚Ä¢ üí∞ 100,000 Pok√©dollars\n\n"
                "ü•â **3rd Place**\n"
                "‚Ä¢ üíé 100 Gems\n"
                "‚Ä¢ üí∞ 50,000 Pok√©dollars\n\n"
                "‚öñÔ∏è Only **Rank 1** gets the Champion role.\n"
                "Rewards may be adjusted in future tournaments."
            ),
            color=discord.Color.gold()
        )
        await interaction.response.send_message(embed=embed)

    @app_commands.command(name="booster_tournament_rewards", description="Shows the increased rewards for the tournament")
    @app_commands.default_permissions(administrator=True)
    async def booster_tournament_rewards(self, interaction: discord.Interaction):
        embed = discord.Embed(
            title="üéÅ Tournament Rewards",
            description=(
                "ü•á **1st Place**\n"
                "‚Ä¢ üëë Special Discord role: **Champion** *(prestige, shown at the top until next tournament)*\n"
                "‚Ä¢ üíé 750 Gems\n"
                "‚Ä¢ üí∞ 600,000 Pok√©dollars\n\n"

                "ü•à **2nd Place**\n"
                "‚Ä¢ üíé 450 Gems\n"
                "‚Ä¢ üí∞ 350,000 Pok√©dollars\n\n"

                "ü•â **3rd Place**\n"
                "‚Ä¢ üíé 200 Gems\n"
                "‚Ä¢ üí∞ 175,000 Pok√©dollars\n\n"

                "üèÖ **4th ‚Äì 8th Place**\n"
                "‚Ä¢ üí∞ 25,000 Pok√©dollars\n"
                "‚Ä¢ üß† Crew Shop **TM of Choice**\n\n"

                "üéñÔ∏è **9th ‚Äì 16th Place**\n"
                "‚Ä¢ üí∞ 12,500 Pok√©dollars\n"
                "‚Ä¢ üß† Crew Shop **TM of Choice**\n\n"

                "‚öñÔ∏è Only **Rank 1** receives the Champion role.\n"
                "Rewards may be adjusted in future tournaments."
            ),
            color=discord.Color.gold()
        )

        await interaction.response.send_message(embed=embed)


    # === Helper: Sign-up Embed ===
    def _signup_embed(self) -> discord.Embed:
        embed = discord.Embed(
            title="üìù Tournament Sign-Up",
            description=(
                "Welcome to the sign-up channel!\n\n"
                "‚ö†Ô∏è **This channel is command-only.**\n"
                "Please do not chat here ‚Äî use the commands below:\n\n"
                "‚Ä¢ Use **`/sign_up`** to register for the tournament.\n"
                "‚Ä¢ If you change your mind, use **`/unregister`** to withdraw.\n\n"
                "‚úÖ Once the tournament starts, you‚Äôll be entered into the bracket."
            ),
            color=discord.Color.blue()
        )
        embed.set_footer(
            text="Sign up only if you‚Äôre sure you can play this month. Good luck!")
        return embed

    def _reports_embed(self) -> discord.Embed:
        embed = discord.Embed(
            title="üèÜ Reporting Match Results",
            description=(
                "This is where you report your completed matches.\n\n"
                "‚ö†Ô∏è **This channel is command-only.**\n"
                "Please do not chat here ‚Äî only use the slash command below:\n\n"
                "After finishing your match:\n"
                "‚Ä¢ The **winner** must run:\n"
                "  **`/report_win winner: @Winner video_link: <URL>`**\n\n"
                "‚ö†Ô∏è Important:\n"
                "‚Ä¢ You **must** include the winner‚Äôs Discord account and a valid **video link**.\n"
                "‚Ä¢ Example: `/report_win winner: @Player1 video_link: https://streamable.com/abcd`\n"
                "‚Ä¢ ‚ùå Reports without video proof will be rejected and must be **redone**."
            ),
            color=discord.Color.orange()
        )
        embed.set_footer(
            text="Only one report per match is needed ‚Äî made by the winner.")
        return embed

    # === Admin Command: Post Sign-up Embed ===

    @app_commands.command(name="post_signup_embed", description="Post the sign-up help embed in the sign-up channel")
    @app_commands.default_permissions(administrator=True)
    async def post_signup_embed(self, interaction: discord.Interaction):
        ch = self.bot.get_channel(SIGNUPS_CH)
        if ch is None:
            ch = await self.bot.fetch_channel(SIGNUPS_CH)
        if ch:
            await ch.send(embed=self._signup_embed())
            await interaction.response.send_message("Sign-up embed posted.", ephemeral=True)
        else:
            await interaction.response.send_message("Couldn‚Äôt find the sign-up channel.", ephemeral=True)

    # === Admin Command: Post Reports Embed ===
    @app_commands.command(name="post_reports_embed", description="Post the reporting help embed in the reports channel")
    @app_commands.default_permissions(administrator=True)
    async def post_reports_embed(self, interaction: discord.Interaction):
        ch = self.bot.get_channel(REPORTS_CH)
        if ch is None:
            ch = await self.bot.fetch_channel(REPORTS_CH)
        if ch:
            await ch.send(embed=self._reports_embed())
            await interaction.response.send_message("Reports embed posted.", ephemeral=True)
        else:
            await interaction.response.send_message("Couldn‚Äôt find the reports channel.", ephemeral=True)

    def _scheduling_reminder_embed(self) -> discord.Embed:
        embed = discord.Embed(
            title="üìÖ Scheduling Your Match",
            description=(
                "‚ö†Ô∏è **This channel is command-only.**\n"
                "Only use the slash command below after you and your opponent agreed on a time.\n\n"
                "‚Ä¢ One of the players runs:\n"
                "`/schedule_match opponent:@Opponent round:<#> year:YYYY month:MM day:DD hour:HH minute:MM`\n\n"
                "üìå Example:\n"
                "`/schedule_match opponent:@Player2 round:1 year:2025 month:10 day:5 hour:19 minute:00`\n\n"
                "‚úÖ Matches must be scheduled **before Wednesday (PBO in-game time)**\n"
                "‚úÖ You may play earlier than the scheduled time, but not later."
            ),
            color=discord.Color.blue()
        )
        embed.set_footer(text="Only one schedule per match is needed.")
        return embed
    
    @app_commands.command(name="post_scheduling_embed", description="Post the scheduling help embed in the scheduling channel")
    @app_commands.default_permissions(administrator=True)
    async def post_scheduling_embed(self, interaction: discord.Interaction):
        ch = self.bot.get_channel(SCHEDULING_CH)
        if ch is None:
            ch = await self.bot.fetch_channel(SCHEDULING_CH)
        if ch:
            await ch.send(embed=self._scheduling_reminder_embed())
            await interaction.response.send_message("Scheduling embed posted.", ephemeral=True)
        else:
            await interaction.response.send_message("Couldn‚Äôt find the scheduling channel.", ephemeral=True)




async def setup(bot: commands.Bot):
    await bot.add_cog(TournamentInfo(bot))
